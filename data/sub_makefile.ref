# Object location in repository
#<to_be_defined>_source_dir:=/home/quicky/Bureau/mon_infra/test_makefile/repository/<to_be_defined>
<to_be_defined>_source_dir:=$(shell search_object.pl <to_be_defined>)

# Relative directories
<to_be_defined>_inc_dir:=$(<to_be_defined>_source_dir)/include
<to_be_defined>_src_dir:=$(<to_be_defined>_source_dir)/src
<to_be_defined>_obj_dir:=$(obj_dir)/<to_be_defined>

# List of files
<to_be_defined>_src= $(wildcard $(<to_be_defined>_src_dir)/*.cpp)
<to_be_defined>_headers= $(wildcard $(<to_be_defined>_source_dir)/src/*.h)
<to_be_defined>_obj=$(notdir  $(patsubst %.cpp, %.o,$(<to_be_defined>_src)))
<to_be_defined>_depend:=$(<to_be_defined>_source_dir)/depend.txt
<to_be_defined>_depend_list:= $(shell cat $(<to_be_defined>_depend))

-include $(addsuffix .mk, $(addprefix infra/, $(<to_be_defined>_depend_list)))
<to_be_defined>_ext_inc_dir := $(<to_be_defined>_inc_dir) $(foreach var_name,$(<to_be_defined>_depend_list) ,$(value $(var_name)_ext_inc_dir))
<to_be_defined>_eval_result := $(addprefix -I, $(<to_be_defined>_ext_inc_dir))

# Adding list of object files to global list of main target
objects+=$(addprefix $(<to_be_defined>_obj_dir)/, $(<to_be_defined>_obj))

components+=<to_be_defined>

#Generic rule to compile cpp files of this object
$(<to_be_defined>_obj_dir)/%.o : $(<to_be_defined>_src_dir)/%.cpp
	@echo " -> Compiling " $@
	g++ -Wall -o $@ -c $< -I$(<to_be_defined>_inc_dir) $(<to_be_defined>_eval_result)

# Rule to compile dependancies 
infra/<to_be_defined>.dep: $(<to_be_defined>_src) $(<to_be_defined>_headers) $(<to_be_defined>_depend)
ifneq (,$(<to_be_defined>_src))
	@ echo " -> Computing dependancies for component <to_be_defined>"
	g++ -Wall -c $< $(<to_be_defined>_eval_result) -MM > $@
endif

obj/<to_be_defined>: obj
	@ echo " -> Preparing component <to_be_defined>"
	@mkdir obj/<to_be_defined>

# target for this object
.PHONY : <to_be_defined>
<to_be_defined> : $(<to_be_defined>_depend_list) infra/<to_be_defined>.dep $(addprefix $(<to_be_defined>_obj_dir)/, $(<to_be_defined>_obj))

